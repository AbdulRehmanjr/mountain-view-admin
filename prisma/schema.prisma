generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SellerInfo {
  sellerId String  @id @default(uuid())
  userName String  @unique
  password String
  Hotel    Hotel[]
}

model Hotel {
  hotelId            String     @id @default(uuid())
  hotelName          String     @default("none")
  type               Int        @default(1)
  island             String     @default("none")
  address            String     @default("none")
  longitude          Float      @default(0.0)
  latitude           Float      @default(0.0)
  description        String     @default("none")
  firstName          String     @default("none")
  lastName           String     @default("none")
  email              String     @default("none")
  phone              String     @default("none")
  checkIn            String     @default("none")
  checkOut           String     @default("none")
  code               String     @default(uuid())
  createdAt          DateTime   @default(now())
  sellerInfoSellerId String
  seller             SellerInfo @relation(fields: [sellerInfoSellerId], references: [sellerId], onDelete: Cascade)
  Room               Room[]
  RatePlan           RatePlan[]

  @@unique([code])
}

model Room {
  roomId       String         @id @default(uuid())
  code         String         @default(uuid())
  roomName     String         @default("none")
  capacity     Int            @default(0)
  area         Int            @default(0)
  features     String[]
  description  String         @default("none")
  roomType     String         @default("none")
  dp           String         @default("none")
  beds         Int            @default(0)
  quantity     Int            @default(1)
  price        Int            @default(1)
  pictures     String[]
  hotelHotelId String
  hotel        Hotel          @relation(fields: [hotelHotelId], references: [hotelId], onDelete: Cascade)
  RoomBooking  RoomBooking[]
  BlockDate    BlockDate[]
  RoomRatePlan RoomRatePlan[]

  @@unique([code])
}

model RatePlan {
  ratePlanId   String         @id @default(uuid())
  code         String         @default(uuid())
  name         String         @default("none")
  description  String         @default("none")
  mealId       Int            @default(15)
  hotelHotelId String
  hotelId      Hotel          @relation(fields: [hotelHotelId], references: [hotelId])
  RoomRatePlan RoomRatePlan[]

  @@unique([code])
}

model RoomRatePlan {
  rrpId     String      @id @default(uuid())
  rateId    String
  roomId    String
  quantity  Int         @default(0)
  hotelName String      @default("none")
  hotelId   String      @default("none")
  room      Room        @relation(fields: [roomId], references: [roomId])
  rate      RatePlan    @relation(fields: [rateId], references: [ratePlanId])
  RoomPrice RoomPrice[]

  @@index([roomId, rateId])
}

model RoomPrice {
  priceId      String       @id @default(uuid())
  startDate    String       @default("none")
  endDate      String       @default("none")
  planCode     String       @default("none")
  price        Int          @default(0)
  rrpId        String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now()) @updatedAt
  roomRatePlan RoomRatePlan @relation(fields: [rrpId], references: [rrpId])
}

model RoomBooking {
  bookingId          String             @id @default(uuid())
  startDate          String             @default("none")
  endDate            String             @default("none")
  isRefund           Boolean            @default(false)
  price              Int                @default(0)
  type               String             @default("none")
  mealType           String             @default("none")
  payPalInfoId       String
  bookingDetailId    String
  roomRoomId         String
  bookingDetails     BookingDetail      @relation(fields: [bookingDetailId], references: [bookingDetailId])
  PayPalBoookingInfo PayPalBoookingInfo @relation(fields: [payPalInfoId], references: [paypalBoookingId])
  Room               Room               @relation(fields: [roomRoomId], references: [roomId], onDelete: Cascade)
}

model BookingDetail {
  bookingDetailId String        @id @default(uuid())
  adults          Int           @default(0)
  children        Int           @default(0)
  kids            Int           @default(0)
  quantity        Int           @default(1)
  city            String        @default("none")
  country         String        @default("none")
  phone           String        @default("none")
  postalCode      String        @default("none")
  address         String        @default("none")
  fullName        String        @default("none")
  surName         String        @default("none")
  email           String        @default("none")
  arrivalTime     String        @default("none")
  RoomBooking     RoomBooking[]
}

model BlockDate {
  blockId    String   @id @default(uuid())
  roomRoomId String
  startDate  String   @default("none")
  endDate    String   @default("none")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  room       Room     @relation(fields: [roomRoomId], references: [roomId], onDelete: Cascade)
}

model GoogleToken {
  tokenId      String @id @default(uuid())
  email        String @default("none")
  refreshToken String @default("none")

  @@index([email])
}

model Discounts {
  discountId String   @id @default(uuid())
  discount   Int      @default(0)
  title      String   @default("none")
  redeemCode String   @unique
  endDate    String   @default("none")
  startDate  String   @default("none")
  createdAt  DateTime @default(now())
}

model SellerPayPal {
  id                String @id @default(uuid())
  trackingId        String @unique
  merchantId        String @default("none")
  partner_client_id String @default("none")
  email             String @unique

  @@index([email, trackingId])
}

model PayPalBoookingInfo {
  paypalBoookingId String        @id @default(uuid())
  paymentEmail     String        @default("none")
  captureId        String
  payerId          String        @default("none")
  paymentId        String        @default("none")
  contactEmail     String        @default("none")
  createdAt        DateTime      @default(now())
  RoomBooking      RoomBooking[]
}
